
---
- hosts: all
  vars:
    build_id: 13.10.0
    build_server: srv003
    ntpserver: ntp.metas.ch
    # create password with:
    # python -c 'import crypt; print crypt.crypt("password", "$1$SomeSalt$")'
    password: $1$SomeSalt$gYe2UKCdKRZzMsGT3AEaE/


  tasks:

  - name: Create QSOS directories - /mnt directories
    action: file path=/mnt/{{ item }} state=directory
    with_items:
        - debian1
        - debian2
        - debian3
        - cpan
        - cpan-$build_id
        - shrdata

  - name: mount the debian ISO images from srv003
    mount: name=/mnt/{{ item }} src=$build_server:{{ item }} fstype=nfs state=mounted
    with_items:
        - debian1
        - debian2
        - debian3
        - cpan
        - cpan-$build_id

  - name: aptitude confiugration
    copy: src=src/sources.list dest=/etc/apt/sources.list mode=0644

  - name: Update the aptitude package cache
    apt: update_cache=yes


    #
    # time - first get the system time right and in cron every hour
    #   we want accurate time for our logging processes
    #

  - name: install NTP and synchronise time
    apt: pkg=ntpdate state=present force=yes

  - name: configure NTP server to ntp.metas.ch
    copy: src=src/synctime.sh dest=/etc/cron.hourly mode=0744

  - name: synchronise time with NTP Server
    command: ntpdate {{ ntpserver }}

    # 
    # users and groups
    #
  - name: create the apps group
    group: name=apps state=present

  - name: add users
    user: name={{ item }} state=present password=$password shell='/bin/bash'
    with_items:
        - qsapp
        - qsdevop
          # remote access user
        - 0mNaAeR@5Zzp83ZbNMJn


  - name: Install base server packages
    apt: pkg={{ item }} state=present force=yes
    with_items:
        - ntpdate
        - htop
        - vim
        - sudo
        - openssh-client
        - openssh-server
        - nfs-common
        - perl-doc
        # - perltidy
        - bzip2
        - git
        - build-essential


- hosts: app
  tasks:
  - name: Install application server packages
    # note that we use the 'force=yes' option to install all dependencies
    # we need to create a 'proper' Debian repository - see:
    # http://askubuntu.com/questions/75565/why-am-i-getting-authentication-errors-for-packages-from-an-ubuntu-repository
    apt: pkg={{ item }} state=present force=yes
    with_items:
        - nginx
        # - apache2
        - mysql-server
        - libmysqlclient-dev
        # - php5
        # - php-pear
        # - php5-mysql

  - name: Install Package pre-requisites required for Perl modules
    apt: pkg={{ item }} state=present force=yes
    with_items:
        # required for Perl XML::Parser module
        - libexpat1-dev
        # required for Perl Net::SSLEay module
        - libssl-dev
        # perl - XML::LibXML
        - libxml2-dev
        # perl - ODBC db drivers
        - unixodbc-dev

  - name: clean-up installation - remove 'rougue apache2' from php5 installs
    # unless we rmove this - nginx does not start
    apt: pkg=apache2.2-common state=absent force=yes

  - name: nginx restart
    action: service name=nginx state=started

    # PERL - app perl installation
    # ----
    # we  leave the system Perl well alone
    # qsapp user installed app perl with 'perlbrew' utility


